<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enhanced Hospital Room Monitoring</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>

<body class="bg-gray-100">
    <!-- Navigation -->
    <nav class="bg-white shadow-lg fixed w-full z-50">
        <div class="max-w-7xl mx-auto px-4">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <i class="fas fa-hospital text-blue-600 text-2xl mr-2"></i>
                    <span class="text-xl font-bold">Room 301 Monitoring</span>
                </div>
                <div class="flex items-center space-x-4">
                    <span class="text-gray-600">Staff: Dr. Sarah Johnson</span>
                    <button onclick="showAlertsPanel()"
                        class="bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 relative">
                        <i class="fas fa-bell mr-2"></i>Alerts
                        <span id="alertCount"
                            class="absolute -top-2 -right-2 bg-red-700 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">0</span>
                    </button>
                    <button onclick="showAddPatientModal()"
                        class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600">
                        <i class="fas fa-plus mr-2"></i>Add Patient
                    </button>
                </div>
            </div>
        </div>
    </nav>

    <!-- Alerts Panel (Sliding from right) -->
    <div id="alertsPanel"
        class="fixed right-0 top-0 h-full w-96 bg-white shadow-lg transform translate-x-full transition-transform duration-300 z-50">
        <div class="p-4 border-b border-gray-200 flex justify-between items-center">
            <h3 class="text-xl font-bold">Recent Alerts</h3>
            <button onclick="hideAlertsPanel()" class="text-gray-500 hover:text-gray-700">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div id="alertsList" class="p-4 space-y-4 overflow-y-auto" style="height: calc(100vh - 64px);">
            <!-- Alerts will be added here dynamically -->
        </div>
    </div>

    <!-- Main Content -->
    <div class="pt-20 px-6 pb-8">
        <!-- Room Overview -->
        <div class="mb-6 grid grid-cols-4 gap-4">
            <div class="bg-white p-4 rounded-lg shadow">
                <div class="text-gray-600">Total Patients</div>
                <div class="text-2xl font-bold"><span id="currentPatients">6</span>/6</div>
            </div>
            <div class="bg-white p-4 rounded-lg shadow">
                <div class="text-gray-600">Critical Cases</div>
                <div class="text-2xl font-bold text-red-500" id="criticalCount">2</div>
            </div>
            <div class="bg-white p-4 rounded-lg shadow">
                <div class="text-gray-600">Staff on Duty</div>
                <div class="text-2xl font-bold">3</div>
            </div>
            <div class="bg-white p-4 rounded-lg shadow">
                <div class="text-gray-600">Room Status</div>
                <div class="text-2xl font-bold text-green-500">Normal</div>
            </div>
        </div>

        <!-- Patients Grid -->
        <div id="patientsGrid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            <!-- Patient cards will be generated here -->
        </div>
    </div>

    <!-- Add Patient Modal -->
    <div id="addPatientModal"
        class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50">
        <div class="bg-white rounded-lg p-6 max-w-md w-full">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-bold">Add New Patient</h3>
                <button onclick="hideAddPatientModal()" class="text-gray-500 hover:text-gray-700">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <form id="addPatientForm" class="space-y-4">
                <div>
                    <label class="block text-gray-700 mb-2">Patient Name</label>
                    <input type="text" id="patientName" class="w-full p-2 border rounded-lg" required>
                </div>
                <div>
                    <label class="block text-gray-700 mb-2">Age</label>
                    <input type="number" id="patientAge" class="w-full p-2 border rounded-lg" required>
                </div>
                <div>
                    <label class="block text-gray-700 mb-2">Bed Number</label>
                    <select id="bedNumber" class="w-full p-2 border rounded-lg" required>
                        <option value="">Select Bed</option>
                        <option value="301-A">301-A</option>
                        <option value="301-B">301-B</option>
                        <option value="301-C">301-C</option>
                        <option value="301-D">301-D</option>
                        <option value="301-E">301-E</option>
                        <option value="301-F">301-F</option>
                    </select>
                </div>
                <div>
                    <label class="block text-gray-700 mb-2">Initial Status</label>
                    <select id="patientStatus" class="w-full p-2 border rounded-lg" required>
                        <option value="stable">Stable</option>
                        <option value="critical">Critical</option>
                    </select>
                </div>
                <div class="flex justify-end space-x-4">
                    <button type="button" onclick="hideAddPatientModal()"
                        class="px-4 py-2 bg-gray-200 rounded-lg hover:bg-gray-300">Cancel</button>
                    <button type="submit" class="px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600">Add
                        Patient</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Patient data structure
        const patients = [
            {
                id: 1,
                name: "John Doe",
                age: 65,
                bed: "301-A",
                status: "critical",
                vitals: {
                    heartRate: 120,
                    spo2: 92,
                    bp: "140/90",
                    temp: 38.5
                }
            },
            {
                id: 2,
                name: "Jane Smith",
                age: 45,
                bed: "301-B",
                status: "stable",
                vitals: {
                    heartRate: 75,
                    spo2: 98,
                    bp: "120/80",
                    temp: 36.8
                }
            },
            {
                id: 3,
                name: "Robert Johnson",
                age: 72,
                bed: "301-C",
                status: "critical",
                vitals: {
                    heartRate: 115,
                    spo2: 91,
                    bp: "150/95",
                    temp: 38.2
                }
            },
            {
                id: 4,
                name: "Mary Williams",
                age: 58,
                bed: "301-D",
                status: "stable",
                vitals: {
                    heartRate: 82,
                    spo2: 97,
                    bp: "125/85",
                    temp: 37.1
                }
            },
            {
                id: 5,
                name: "James Brown",
                age: 67,
                bed: "301-E",
                status: "stable",
                vitals: {
                    heartRate: 78,
                    spo2: 96,
                    bp: "130/85",
                    temp: 37.0
                }
            },
            {
                id: 6,
                name: "Patricia Davis",
                age: 51,
                bed: "301-F",
                status: "stable",
                vitals: {
                    heartRate: 80,
                    spo2: 97,
                    bp: "122/82",
                    temp: 36.9
                }
            }
        ];

        // Charts storage
        const charts = {};

        // Initialize the dashboard
        function initializeDashboard() {
            updatePatientsGrid();
            startVitalsSimulation();
            updateStats();
        }

        // Create patient card
        function createPatientCard(patient) {
            const cardHtml = `
                <div id="patient-${patient.id}" class="bg-white rounded-lg shadow-lg border-l-4 ${patient.status === 'critical' ? 'border-red-500' : 'border-green-500'}">
                    <div class="p-4">
                        <div class="flex justify-between items-start mb-4">
                            <div>
                                <div class="text-lg font-bold">Bed ${patient.bed}</div>
                                <div class="text-gray-600">${patient.name}, ${patient.age}</div>
                            </div>
                            <div class="flex space-x-2">
                                <span class="px-2 py-1 ${patient.status === 'critical' ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800'} rounded-full text-sm">
                                    ${patient.status.charAt(0).toUpperCase() + patient.status.slice(1)}
                                </span>
                                <button onclick="removePatient(${patient.id})" class="text-red-500 hover:text-red-700">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        </div>
                        <div class="grid grid-cols-2 gap-4 mb-4">
                            <div class="bg-gray-50 p-3 rounded-lg">
                                <div class="text-sm text-gray-600">Heart Rate</div>
                                <div class="text-xl font-bold ${patient.vitals.heartRate > 100 ? 'text-red-500' : 'text-green-500'}">${patient.vitals.heartRate} BPM</div>
                                <canvas id="heartRate-${patient.id}" height="50"></canvas>
                            </div>
                            <div class="bg-gray-50 p-3 rounded-lg">
                                <div class="text-sm text-gray-600">SpO2</div>
                                <div class="text-xl font-bold ${patient.vitals.spo2 < 95 ? 'text-red-500' : 'text-green-500'}">${patient.vitals.spo2}%</div>
                                <canvas id="spo2-${patient.id}" height="50"></canvas>
                            </div>
                            <div class="bg-gray-50 p-3 rounded-lg">
                                <div class="text-sm text-gray-600">BP</div>
                                <div class="text-xl font-bold">${patient.vitals.bp}</div>
                            </div>
                            <div class="bg-gray-50 p-3 rounded-lg">
                                <div class="text-sm text-gray-600">Temp</div>
                                <div class="text-xl font-bold">${patient.vitals.temp}°C</div>
                            </div>
                        </div>
                        <div class="flex justify-between items-center">
                            <span class="text-sm text-gray-600">Last Updated: Just now</span>
                            <button class="text-blue-500 hover:text-blue-700">
                                <i class="fas fa-external-link-alt"></i>
                            </button>
                        </div>
                    </div>
                </div>
            `;
            return cardHtml;
        }

        // Update patients grid
        function updatePatientsGrid() {
            const grid = document.getElementById('patientsGrid');
            grid.innerHTML = '';
            patients.forEach(patient => {
                grid.innerHTML += createPatientCard(patient);
            });
            // Initialize charts after cards are created
            patients.forEach(patient => {
                initializeCharts(patient.id);
            });
        }

        // Initialize charts for a patient
        function initializeCharts(patientId) {
            const heartRateData = Array(10).fill(patients.find(p => p.id === patientId).vitals.heartRate);
            const spo2Data = Array(10).fill(patients.find(p => p.id === patientId).vitals.spo2);

            charts[`heartRate-${patientId}`] = createChart(`heartRate-${patientId}`, heartRateData,
                patients.find(p => p.id === patientId).status === 'critical' ? 'rgb(239, 68, 68)' : 'rgb(34, 197, 94)');
            charts[`spo2-${patientId}`] = createChart(`spo2-${patientId}`, spo2Data,
                patients.find(p => p.id === patientId).status === 'critical' ? 'rgb(239, 68, 68)' : 'rgb(34, 197, 94)');
        }

        // Create chart
        function createChart(canvasId, data, color) {
            const ctx = document.getElementById(canvasId).getContext('2d');
            return new Chart(ctx, {
                type: 'line',
                data: {
                    labels: Array(10).fill(''),
                    datasets: [{
                        data: data,
                        borderColor: color,
                        borderWidth: 1.5,
                        tension: 0.4,
                        fill: false
                    }]
                },
                options: {
                    responsive: true,
                    plugins: { legend: { display: false } },
                    scales: {
                        x: { display: false },
                        y: { display: false }
                    },
                    elements: {
                        point: { radius: 0 }
                    }
                }
            });
        }

        // Continue vital signs simulation
        function startVitalsSimulation() {
            setInterval(() => {
                patients.forEach(patient => {
                    // Update heart rate with random fluctuation
                    patient.vitals.heartRate = Math.round(
                        patient.vitals.heartRate + (Math.random() - 0.5) * 2
                    );

                    // Update SpO2 with small random changes
                    patient.vitals.spo2 = Math.round(
                        Math.max(Math.min(patient.vitals.spo2 + (Math.random() - 0.5), 100), 85)
                    );

                    // Update charts
                    if (charts[`heartRate-${patient.id}`]) {
                        const heartData = charts[`heartRate-${patient.id}`].data.datasets[0].data;
                        heartData.push(patient.vitals.heartRate);
                        heartData.shift();
                        charts[`heartRate-${patient.id}`].update();
                    }

                    if (charts[`spo2-${patient.id}`]) {
                        const spo2Data = charts[`spo2-${patient.id}`].data.datasets[0].data;
                        spo2Data.push(patient.vitals.spo2);
                        spo2Data.shift();
                        charts[`spo2-${patient.id}`].update();
                    }

                    // Check for alerts
                    checkVitalSigns(patient);

                    // Update display
                    updatePatientVitals(patient);
                });
            }, 1000);
        }

        // Update patient vitals display
        function updatePatientVitals(patient) {
            const card = document.getElementById(`patient-${patient.id}`);
            if (card) {
                const heartRateElement = card.querySelector('div:contains("Heart Rate")').nextElementSibling;
                const spo2Element = card.querySelector('div:contains("SpO2")').nextElementSibling;

                heartRateElement.textContent = `${patient.vitals.heartRate} BPM`;
                heartRateElement.className = `text-xl font-bold ${patient.vitals.heartRate > 100 ? 'text-red-500' : 'text-green-500'}`;

                spo2Element.textContent = `${patient.vitals.spo2}%`;
                spo2Element.className = `text-xl font-bold ${patient.vitals.spo2 < 95 ? 'text-red-500' : 'text-green-500'}`;
            }
        }

        // Check vital signs and create alerts
        function checkVitalSigns(patient) {
            if (patient.vitals.heartRate > 100 || patient.vitals.heartRate < 60) {
                createAlert(patient, 'Heart Rate', patient.vitals.heartRate + ' BPM');
            }
            if (patient.vitals.spo2 < 95) {
                createAlert(patient, 'SpO2', patient.vitals.spo2 + '%');
            }
        }

        // Alert management
        let alertCount = 0;
        const alerts = [];

        function createAlert(patient, vitalSign, value) {
            const alert = {
                id: Date.now(),
                patient: patient.name,
                bed: patient.bed,
                vitalSign,
                value,
                timestamp: new Date().toLocaleTimeString()
            };

            alerts.unshift(alert);
            if (alerts.length > 50) alerts.pop(); // Keep last 50 alerts

            updateAlertsList();
            updateAlertCount();
        }

        function updateAlertsList() {
            const alertsList = document.getElementById('alertsList');
            alertsList.innerHTML = alerts.map(alert => `
        <div class="bg-red-50 p-3 rounded-lg border border-red-200">
            <div class="flex justify-between items-start">
                <div>
                    <span class="font-bold text-red-600">${alert.patient}</span>
                    <span class="text-gray-600"> (Bed ${alert.bed})</span>
                </div>
                <span class="text-sm text-gray-500">${alert.timestamp}</span>
            </div>
            <div class="mt-1 text-gray-700">
                ${alert.vitalSign}: ${alert.value}
            </div>
        </div>
    `).join('');
        }

        function updateAlertCount() {
            const countElement = document.getElementById('alertCount');
            countElement.textContent = alerts.length;
        }

        // Patient management functions
        function addPatient(event) {
            event.preventDefault();

            const name = document.getElementById('patientName').value;
            const age = document.getElementById('patientAge').value;
            const bed = document.getElementById('bedNumber').value;
            const status = document.getElementById('patientStatus').value;

            const newPatient = {
                id: patients.length + 1,
                name,
                age,
                bed,
                status,
                vitals: {
                    heartRate: status === 'critical' ? 110 : 75,
                    spo2: status === 'critical' ? 92 : 98,
                    bp: status === 'critical' ? '140/90' : '120/80',
                    temp: status === 'critical' ? 38.5 : 36.8
                }
            };

            patients.push(newPatient);
            updatePatientsGrid();
            updateStats();
            hideAddPatientModal();
        }

        function removePatient(patientId) {
            const index = patients.findIndex(p => p.id === patientId);
            if (index !== -1) {
                patients.splice(index, 1);
                updatePatientsGrid();
                updateStats();
            }
        }

        // Stats updates
        function updateStats() {
            document.getElementById('currentPatients').textContent = patients.length;
            document.getElementById('criticalCount').textContent =
                patients.filter(p => p.status === 'critical').length;
        }

        // Modal controls
        function showAddPatientModal() {
            document.getElementById('addPatientModal').classList.remove('hidden');
        }

        function hideAddPatientModal() {
            document.getElementById('addPatientModal').classList.add('hidden');
        }

        function showAlertsPanel() {
            document.getElementById('alertsPanel').classList.remove('translate-x-full');
        }

        function hideAlertsPanel() {
            document.getElementById('alertsPanel').classList.add('translate-x-full');
        }

        // Event listeners
        document.getElementById('addPatientForm').addEventListener('submit', addPatient);

        // Initialize dashboard when page loads
        document.addEventListener('DOMContentLoaded', initializeDashboard);
    </script>
</body>
</html>    