<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Doctor Dashboard - MediCare ICU</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
  <style>
    body {
      font-family: 'Plus Jakarta Sans', sans-serif;
      background: linear-gradient(135deg, #f6f7ff 0%, #ffffff 100%);
    }

    .glass-effect {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
    }

    .pulse-ring {
      animation: pulse-ring 2s cubic-bezier(0.215, 0.61, 0.355, 1) infinite;
    }

    @keyframes pulse-ring {
      0% {
        transform: scale(0.95);
        box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.7);
      }

      70% {
        transform: scale(1);
        box-shadow: 0 0 0 10px rgba(239, 68, 68, 0);
      }

      100% {
        transform: scale(0.95);
        box-shadow: 0 0 0 0 rgba(239, 68, 68, 0);
      }
    }

    .animate-float {
      animation: float 6s ease-in-out infinite;
    }

    @keyframes float {
      0% {
        transform: translateY(0px);
      }

      50% {
        transform: translateY(-20px);
      }

      100% {
        transform: translateY(0px);
      }
    }
  </style>
</head>

<body class="bg-gray-50">
  <!-- Navigation -->
  <script id="patients-data" type="application/json">
    <%- JSON.stringify(patients) %>
  </script>
  <nav class="bg-white shadow-lg fixed w-full z-50">
    <div class="max-w-7xl mx-auto px-4">
      <div class="flex justify-between h-20">
        <div class="flex items-center space-x-4">
          <div class="relative pulse-ring rounded-full p-2">
            <i class="fas fa-heartbeat text-red-500 text-3xl"></i>
            <div class="absolute -top-1 -right-1 w-3 h-3 bg-green-500 rounded-full border-2 border-white"></div>
          </div>
          <div class="text-gray-800 text-2xl font-extrabold tracking-tight">
            Medi<span class="text-red-500">Care</span>
            <span class="text-sm font-medium bg-red-50 text-red-500 px-2 py-1 rounded-full ml-2">ICU Portal</span>
          </div>
        </div>
        <div class="flex items-center space-x-6">
          <div class="relative">
            <input type="text" id="searchInput" placeholder="Search patients..."
              class="pl-10 pr-4 py-2 border rounded-full w-64 focus:outline-none focus:ring-2 focus:ring-blue-500" />
            <i class="fas fa-search absolute left-4 top-3 text-gray-400"></i>
          </div>
          <div class="flex items-center space-x-3">
            <div class="relative">
              <button id="notificationBtn" class="relative">
                <i class="fas fa-bell text-gray-600"></i>
                <% if (notifications && notifications.length) { %>
                  <span
                    class="absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full w-4 h-4 flex items-center justify-center">
                    <%= notifications.length %>
                  </span>
                  <% } %>
              </button>
              <!-- Notifications Dropdown -->
              <div id="notificationDropdown"
                class="hidden absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg z-50">
                <div class="p-4 border-b">
                  <h3 class="font-semibold">Notifications</h3>
                </div>
                <div class="max-h-96 overflow-y-auto">
                  <% if (notifications && notifications.length) { %>
                    <span
                      class="absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full w-4 h-4 flex items-center justify-center">
                      <%= notifications.length %>
                    </span>
                    <% } %>

                      <div class="max-h-96 overflow-y-auto">
                        <% if (notifications && notifications.length) { %>
                          <% notifications.forEach(function(notification) { %>
                            <div class="p-4 border-b hover:bg-gray-50">
                              <div class="font-medium">
                                <%= notification.title %>
                              </div>
                              <div class="text-sm text-gray-500">
                                <%= notification.message %>
                              </div>
                              <div class="text-xs text-gray-400 mt-1">
                                <%= notification.time %>
                              </div>
                            </div>
                            <% }) %>
                              <% } else { %>
                                <div class="p-4 text-sm text-gray-500">No notifications</div>
                                <% } %>
                      </div>
                </div>
              </div>
              <span class="text-gray-600">
                &nbsp; Dr. <%= doctor.name %> &nbsp;
              </span>
            </div>
            <form action="/logout" method="POST">
              <button class="flex items-center space-x-2 bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600">
                <i class="fas fa-sign-out-alt"></i>
                <span>Logout</span>
              </button>
            </form>
          </div>
        </div>
      </div>
  </nav>

  <!-- Main Content -->
  <div class="pt-24 pb-8">
    <div class="max-w-7xl mx-auto px-4">
      <!-- Dashboard Stats -->
      <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
        <div class="bg-white p-6 rounded-xl shadow-sm">
          <div class="flex items-center">
            <div class="bg-blue-100 p-3 rounded-full">
              <i class="fas fa-user-injured text-blue-500"></i>
            </div>
            <div class="ml-4">
              <h3 class="text-gray-500 text-sm">Total Patients</h3>
              <p class="text-2xl font-semibold">
                <%= patients.length %>
              </p>
            </div>
          </div>
        </div>
        <div class="bg-white p-6 rounded-xl shadow-sm">
          <div class="flex items-center">
            <div class="bg-red-100 p-3 rounded-full">
              <i class="fas fa-procedures text-red-500"></i>
            </div>
            <div class="ml-4">
              <h3 class="text-gray-500 text-sm">Critical Cases</h3>
              <p class="text-2xl font-semibold">
                <%= patients.filter(patient=> patient.status === 'critical').length %>
              </p>
            </div>
          </div>
        </div>
        <div class="bg-white p-6 rounded-xl shadow-sm">
          <div class="flex items-center">
            <div class="bg-green-100 p-3 rounded-full">
              <i class="fas fa-heart text-green-500"></i>
            </div>
            <div class="ml-4">
              <h3 class="text-gray-500 text-sm">Stable Cases</h3>
              <p class="text-2xl font-semibold">
                <%= patients.filter(patient=> patient.status === 'stable').length %>
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- Patient List -->
      <div class="bg-white rounded-xl shadow-sm">
        <div class="p-6 border-b">
          <div class="flex justify-between items-center">
            <h2 class="text-xl font-semibold">Current Patients</h2>
            <div class="flex space-x-4">
              <select id="statusFilter" class="px-4 py-2 border rounded-lg">
                <option value="all">All Patients</option>
                <option value="critical">Critical</option>
                <option value="stable">Stable</option>
                <option value="recovering">Recovering</option>
              </select>
            </div>
          </div>
        </div>

        <!-- Patient List Table -->
        <div class="overflow-x-auto">
          <table class="w-full" id="patientTable">
            <thead class="bg-gray-50">
              <tr>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer">
                  Patient <i class="fas fa-sort ml-1"></i>
                </th>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer">
                  ID <i class="fas fa-sort ml-1"></i>
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Room
                </th>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer">
                  Status <i class="fas fa-sort ml-1"></i>
                </th>
              </tr>
            </thead>
            <tbody id="patientTableBody" class="divide-y divide-gray-200">
              <!-- Patient rows will be populated by JavaScript -->
            </tbody>
          </table>
        </div>

        <!-- Pagination -->
        <div class="px-6 py-4 border-t">
          <div class="flex items-center justify-between">
            <div class="text-sm text-gray-500" id="paginationInfo">
              Showing <span id="startRange">1</span> to <span id="endRange">10</span> of
              <span id="totalItems">
                <%= patients.length %>
              </span> patients
            </div>
            <div class="flex space-x-2" id="paginationControls">
              <!-- Pagination buttons will be populated by JavaScript -->
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    const patientsDataEl = document.getElementById('patients-data');
    const patients = JSON.parse(patientsDataEl.textContent);

    // Pagination variables
    let currentPage = 1;
    const itemsPerPage = 10;
    let filteredPatients = [...patients];

    // Initialize on DOMContentLoaded
    document.addEventListener("DOMContentLoaded", () => {
      updateTable();
      setupEventListeners();
    });

    function updateTable() {
      const tbody = document.getElementById("patientTableBody");
      const start = (currentPage - 1) * itemsPerPage;
      const end = start + itemsPerPage;
      const pageData = filteredPatients.slice(start, end);

      tbody.innerHTML = pageData
        .map((patient) => `
          <tr class="hover:bg-gray-50 cursor-pointer" onclick="window.location.href='/patient?patient_id=${patient.patient_id}'">
            <td class="px-6 py-4">
              <div class="flex items-center space-x-3">
                <div class="w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center">
                  <i class="fas fa-user text-gray-400"></i>
                </div>
                <div>
                  <div class="font-medium">${patient.name}</div>
                </div>
              </div>
            </td>
            <td class="px-6 py-4">${patient.patient_id}</td>
            <td class="px-6 py-4">${patient.room_number}</td>
            <td class="px-6 py-4">
              <span class="capitalize px-2 py-1 rounded-full text-xs ${patient.status === "critical"
                ? "bg-red-100 text-red-800"
                : patient.status === "stable"
                  ? "bg-green-100 text-green-800"
                  : "bg-yellow-100 text-yellow-800"
              }">
                ${patient.status || "N/A"}
              </span>
            </td>
          </tr>
        `)
        .join("");

      updatePagination();
    }

    // Update pagination info and controls
    function updatePagination() {
      const total = filteredPatients.length;
      const start = (currentPage - 1) * itemsPerPage + 1;
      const end = Math.min(start + itemsPerPage - 1, total);

      document.getElementById("startRange").textContent = start;
      document.getElementById("endRange").textContent = end;
      document.getElementById("totalItems").textContent = total;

      const totalPages = Math.ceil(total / itemsPerPage);
      updatePaginationControls(totalPages);
    }

    function updatePaginationControls(totalPages) {
      const controls = document.getElementById("paginationControls");
      controls.innerHTML = `
        <button onclick="changePage(${currentPage - 1})" 
                class="px-3 py-1 rounded-md ${currentPage === 1
          ? "text-gray-400 cursor-not-allowed"
          : "text-blue-500 hover:bg-blue-50"
        }"
                ${currentPage === 1 ? "disabled" : ""}>
          Previous
        </button>
        <button onclick="changePage(${currentPage + 1})"
                class="px-3 py-1 rounded-md ${currentPage === totalPages
          ? "text-gray-400 cursor-not-allowed"
          : "text-blue-500 hover:bg-blue-50"
        }"
                ${currentPage === totalPages ? "disabled" : ""}>
          Next
        </button>
      `;
    }

    function changePage(page) {
      if (page >= 1 && page <= Math.ceil(filteredPatients.length / itemsPerPage)) {
        currentPage = page;
        updateTable();
      }
    }

    // Setup event listeners for search, status filter, and notifications
    function setupEventListeners() {
      // Search functionality
      document.getElementById("searchInput").addEventListener("input", (e) => {
        const searchTerm = e.target.value.toLowerCase();
        filteredPatients = patients.filter(
          (patient) =>
            patient.name.toLowerCase().includes(searchTerm) ||
            patient.id.toLowerCase().includes(searchTerm)
        );
        currentPage = 1;
        updateTable();
      });

      // Status filter
      document.getElementById("statusFilter").addEventListener("change", (e) => {
        const status = e.target.value;
        filteredPatients =
          status === "all" ? [...patients] : patients.filter((patient) => patient.status === status);
        currentPage = 1;
        updateTable();
      });

      // Notification toggle
      document.getElementById("notificationBtn").addEventListener("click", () => {
        const dropdown = document.getElementById("notificationDropdown");
        dropdown.classList.toggle("hidden");
      });

      // Close notifications when clicking outside
      document.addEventListener("click", (e) => {
        if (
          !e.target.closest("#notificationBtn") &&
          !e.target.closest("#notificationDropdown")
        ) {
          document.getElementById("notificationDropdown").classList.add("hidden");
        }
      });
    }

    // Modal functions
    function openAddPatientModal() {
      document.getElementById("addPatientModal").classList.remove("hidden");
    }

    function closeAddPatientModal() {
      document.getElementById("addPatientModal").classList.add("hidden");
    }

    // Add form submission handler
    document.getElementById("addPatientForm").addEventListener("submit", (e) => {
      e.preventDefault();
      // Add form handling logic here (e.g., collect form data and send it to your backend)
      closeAddPatientModal();
    });
  </script>
</body>

</html>