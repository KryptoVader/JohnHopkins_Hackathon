<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Hospital Staff Portal</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
    <style>
        @import url("https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300..700&display=swap");

        body {
            font-family: "Space Grotesk", sans-serif;
            background: #f0f2f5;
            color: #333;
            min-height: 100vh;
            overflow-x: hidden;
            position: relative;
        }

        /* Glassmorphism card style */
        .glass {
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.5);
            box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.1);
        }

        /* Red & White Themed Animated Radial Background */
        .gradient-bg {
            background: radial-gradient(circle at 50% 50%, rgba(237, 33, 58, 0.2) 0%, #ffffff 70%);
            background-size: 200% 200%;
            position: fixed;
            width: 100%;
            height: 100%;
            animation: gradientMove 15s ease infinite;
            z-index: -2;
        }

        @keyframes gradientMove {
            0% {
                background-position: 0% 50%;
            }

            50% {
                background-position: 100% 50%;
            }

            100% {
                background-position: 0% 50%;
            }
        }

        .floating {
            animation: float 6s ease-in-out infinite;
        }

        @keyframes float {
            0% {
                transform: translateY(0px);
            }

            50% {
                transform: translateY(-20px);
            }

            100% {
                transform: translateY(0px);
            }
        }

        /* A subtle mouse–tracking gradient effect */
        .mouse-gradient {
            background: radial-gradient(circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
                    rgba(255, 200, 200, 0.3) 0%,
                    rgba(0, 0, 0, 0) 50%);
        }

        /* Role buttons with a hover shine effect */
        .role-button {
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            background: transparent;
        }

        .role-button::before {
            content: "";
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(0, 0, 0, 0.1), transparent);
            transition: 0.5s;
        }

        .role-button:hover::before {
            left: 100%;
        }

        .role-button.active {
            background: linear-gradient(120deg, #f7565c 100%, #fda19e 0%);
            transform: scale(1.05);
            color: #fff;
        }

        input::placeholder {
            color: #fda19e;
        }

        input:focus {
            outline: none;
            box-shadow: 0 0 0 2px #f7565c;
        }

        .animated-radial {
            /* A radial gradient that starts with a soft red,
     transitions to a light pink, then fades to transparent */
            background: radial-gradient(circle at center,
                    rgba(237, 33, 58, 0.3) 0%,
                    rgba(255, 182, 193, 0.2) 70%,
                    transparent 100%);
            /* Ensure the background covers the area */
            background-size: 150%;
            background-position: center;
            /* Animate the background size for a pulsing effect */
            animation: pulse 3s ease-in-out infinite;
            /* Optional: add a slight blur for extra depth */
            filter: blur(0.5px);
        }

        @keyframes pulse {

            0%,
            100% {
                background-size: 150%;
                background-position: center;
            }

            50% {
                background-size: 200%;
                background-position: center;
            }
        }
    </style>
</head>

<body>
    <!-- Fixed animated red & white gradient background -->
    <div class="gradient-bg"></div>

    <!-- Mouse–tracking gradient -->
    <div id="mouseGradient" class="fixed inset-0 mouse-gradient pointer-events-none"></div>

    <!-- Loading bar on top -->
    <div id="loadingBar"
        class="loading-bar h-1 bg-gradient-to-r from-white to-red-500 fixed top-0 left-0 w-0 transition-all duration-300 z-50">
    </div>

    <!-- Main Container -->
    <div class="min-h-screen flex items-center justify-center p-4 relative z-10">
        <div class="max-w-6xl w-full">
            <div class="glass rounded-3xl overflow-hidden shadow-2xl border border-white/10">
                <div class="grid md:grid-cols-2">
                    <!-- Left Side – Hero Section with Red & White Gradient -->
                    <div class="relative hidden md:block p-12 overflow-hidden animated-radial">
                        <div class="floating absolute inset-0 flex items-center justify-center">
                            <div class="text-center">
                                <h2 class="text-4xl font-bold text-gray-800 mb-4" id="welcomeText">
                                    Welcome to MediCare
                                </h2>
                                <p class="text-gray-600 text-lg" id="roleDescription">
                                    Please sign in with your credentials
                                </p>
                            </div>
                        </div>
                    </div>

                    <!-- Right Side – Login Form -->
                    <div class="p-12 backdrop-blur-md">
                        <div class="mb-8">
                            <h1 class="text-4xl font-bold text-gray-800 mb-2">Sign In</h1>
                            <p class="text-gray-600">Use your credentials provided by admin</p>
                        </div>

                        <!-- Role Selection Tabs -->
                        <div class="relative mb-8">
                            <div class="flex space-x-4">
                                <button
                                    class="role-button active flex-1 p-4 rounded-xl glass text-gray-800 text-center hover:scale-105 transition-transform"
                                    data-role="doctor">
                                    <i class="fas fa-user-md text-2xl mb-2"></i>
                                    <p class="text-sm font-medium">Doctor</p>
                                </button>
                                <button
                                    class="role-button flex-1 p-4 rounded-xl glass text-gray-800 text-center hover:scale-105 transition-transform"
                                    data-role="staff">
                                    <i class="fas fa-user-nurse text-2xl mb-2"></i>
                                    <p class="text-sm font-medium">Staff</p>
                                </button>
                                <button
                                    class="role-button flex-1 p-4 rounded-xl glass text-gray-800 text-center hover:scale-105 transition-transform"
                                    data-role="patient">
                                    <i class="fas fa-hospital-user text-2xl mb-2"></i>
                                    <p class="text-sm font-medium">Patient</p>
                                </button>
                            </div>
                        </div>

                        <!-- Dynamic Login Form -->
                        <form id="loginForm" class="space-y-6" action="/login" method="post">
                            <div id="formFields"></div>

                            <div class="flex items-center justify-between">
                                <label class="flex items-center">
                                    <input type="checkbox"
                                        class="rounded border-gray-400 text-blue-500 focus:ring-blue-500 bg-transparent" />
                                    <span class="ml-2 text-sm text-gray-700">Remember me</span>
                                </label>
                                <a href="#" class="text-sm text-blue-500 hover:text-blue-600 font-medium">Forgot
                                    password?</a>
                            </div>

                            <button type="submit"
                                class="w-full p-4 rounded-xl bg-gradient-to-r from-red-500 to-red-500 text-white font-medium hover:opacity-90 transition-all relative overflow-hidden group hover:scale-[1.02] transform duration-200">
                                <span class="relative z-10">Sign in securely</span>
                                <div
                                    class="absolute inset-0 bg-gradient-to-r from-red-600 to-red-600 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                                </div>
                            </button>
                        </form>

                        <!-- Help Section -->
                        <div class="mt-8 pt-6 border-t border-gray-300">
                            <div class="flex items-center justify-center space-x-6 text-gray-600">
                                <a href="#" class="hover:text-gray-800 transition-colors flex items-center">
                                    <i class="fas fa-headset mr-2"></i>
                                    Support
                                </a>
                            </div>
                        </div>
                    </div>
                    <!-- End Right Side -->

                </div>
            </div>
            <div class="mt-6 text-center">
                <p class="text-sm text-gray-600 flex items-center justify-center">
                    <i class="fas fa-shield-alt text-gray-400 mr-2"></i>
                    Secured by MediCare ICU Security Protocol
                </p>
            </div>
        </div>
    </div>

    <script>
        /* -------------------------------
           Form Templates (with toggle password)
           ------------------------------- */
        const formTemplates = {
            doctor: `
        <div class="space-y-4">
          <div class="relative">
            <label class="block text-gray-700 text-sm mb-2 font-medium">Doctor ID</label>
            <input
              type="text"
              name="medicalId"
              class="w-full p-4 rounded-xl glass bg-white text-gray-800 border border-gray-300 focus:border-red-200 transition-colors"
              placeholder="Enter your doctor ID"
            />
          </div>
          <div class="relative">
            <label class="block text-gray-700 text-sm mb-2 font-medium">Password</label>
            <input
              type="password"
              name="password"
              class="w-full p-4 rounded-xl glass bg-white text-gray-800 border border-gray-300 focus:border-red-200 transition-colors"
              placeholder="Enter your password"
            />
            <button
              type="button"
              onclick="togglePassword(this)"
              class="absolute inset-y-0 right-0 pr-4 flex items-center"
            >
              <i class="fas fa-eye absolute right-5 bottom-4 transform -translate-y-1/2 text-gray-400"></i>
            </button>
          </div>
        </div>
      `,
            staff: `
        <div class="space-y-4">
          <div class="relative">
            <label class="block text-gray-700 text-sm mb-2 font-medium">Staff ID</label>
            <input
              type="text"
              name="staffId"
              class="w-full p-4 rounded-xl glass bg-white text-gray-800 border border-gray-300 focus:border-red-200 transition-colors"
              placeholder="Enter your staff ID"
            />
          </div>
          <div class="relative">
            <label class="block text-gray-700 text-sm mb-2 font-medium">Password</label>
            <input
              type="password"
              name="password"
              class="w-full p-4 rounded-xl glass bg-white text-gray-800 border border-gray-300 focus:border-red-200 transition-colors"
              placeholder="Enter your password"
            />
            <button
              type="button"
              onclick="togglePassword(this)"
              class="absolute inset-y-0 right-0 pr-4 flex items-center"
            >
              <i class="fas fa-eye absolute right-5 bottom-4 transform -translate-y-1/2 text-gray-400"></i>
            </button>
          </div>
        </div>
      `,
            patient: `
        <div class="space-y-4">
          <div class="relative">
            <label class="block text-gray-700 text-sm mb-2 font-medium">Patient ID</label>
            <input
              type="text"
              name="patientId"
              class="w-full p-4 rounded-xl glass bg-white text-gray-800 border border-gray-300 focus:border-red-200 transition-colors"
              placeholder="Enter your patient ID"
            />
          </div>
          <div class="relative">
            <label class="block text-gray-700 text-sm mb-2 font-medium">Access Code</label>
            <input
              type="password"
              name="password"
              class="w-full p-4 rounded-xl glass bg-white text-gray-800 border border-gray-300 focus:border-red-200 transition-colors"
              placeholder="Enter your password"
            />
            <button
              type="button"
              onclick="togglePassword(this)"
              class="absolute inset-y-0 right-0 pr-4 flex items-center"
            >
              <i class="fas fa-eye absolute right-5 bottom-4 transform -translate-y-1/2 text-gray-400"></i>
            </button>
          </div>
        </div>
      `
        };

        /* -------------------------------
           Role–specific welcome messages
           ------------------------------- */
        const welcomeMessages = {
            doctor: {
                title: "Welcome, Doctor",
                description: "Access patient records and schedules"
            },
            staff: {
                title: "Welcome, Staff Member",
                description: "Manage hospital operations"
            },
            patient: {
                title: "Welcome, Patient",
                description: "View your medical records and appointments"
            }
        };

        /* -------------------------------
           Update the login form based on selected role
           ------------------------------- */
        function updateForm(role) {
            const formFields = document.getElementById("formFields");
            const welcomeText = document.getElementById("welcomeText");
            const roleDescription = document.getElementById("roleDescription");

            // Animate form change
            gsap.to(formFields, {
                opacity: 0,
                y: -20,
                duration: 0.3,
                onComplete: () => {
                    formFields.innerHTML = formTemplates[role];
                    gsap.to(formFields, { opacity: 1, y: 0, duration: 0.3 });
                }
            });

            // Update welcome message with animation
            gsap.to([welcomeText, roleDescription], {
                opacity: 0,
                y: -20,
                duration: 0.3,
                onComplete: () => {
                    welcomeText.textContent = welcomeMessages[role].title;
                    roleDescription.textContent = welcomeMessages[role].description;
                    gsap.to([welcomeText, roleDescription], { opacity: 1, y: 0, duration: 0.3 });
                }
            });
        }

        /* -------------------------------
           Toggle password visibility
           ------------------------------- */
        function togglePassword(button) {
            const input = button.parentElement.querySelector("input");
            const icon = button.querySelector("i");
            if (input.type === "password") {
                input.type = "text";
                icon.classList.remove("fa-eye");
                icon.classList.add("fa-eye-slash");
            } else {
                input.type = "password";
                icon.classList.remove("fa-eye-slash");
                icon.classList.add("fa-eye");
            }
        }

        /* -------------------------------
           Update the tab indicator position under the active role button
           ------------------------------- */
        function updateTabIndicator() {
            const activeBtn = document.querySelector(".role-button.active");
            const indicator = document.querySelector(".tab-indicator");
            if (activeBtn && indicator) {
                const btnRect = activeBtn.getBoundingClientRect();
                const parentRect = activeBtn.parentElement.getBoundingClientRect();
                indicator.style.width = `${btnRect.width}px`;
                indicator.style.left = `${btnRect.left - parentRect.left}px`;
            }
        }

        /* -------------------------------
           Role button click handlers
           ------------------------------- */
        document.querySelectorAll(".role-button").forEach((button) => {
            button.addEventListener("click", () => {
                // Update active state
                document.querySelectorAll(".role-button").forEach((btn) => btn.classList.remove("active"));
                button.classList.add("active");

                // Update form based on selected role and update tab indicator
                updateForm(button.dataset.role);
                updateTabIndicator();
            });
        });

        /* -------------------------------
           Mouse gradient effect
           ------------------------------- */
        document.addEventListener("mousemove", (e) => {
            const mouseGradient = document.getElementById("mouseGradient");
            const x = (e.clientX / window.innerWidth) * 100;
            const y = (e.clientY / window.innerHeight) * 100;
            mouseGradient.style.setProperty("--mouse-x", `${x}%`);
            mouseGradient.style.setProperty("--mouse-y", `${y}%`);
        });

        /* -------------------------------
           Form submission handling
           ------------------------------- */
        document.getElementById("loginForm").addEventListener("submit", async (e) => {
            e.preventDefault();
            const loadingBar = document.getElementById("loadingBar");
            loadingBar.style.width = "0%";
            gsap.to(loadingBar, {
                width: "100%",
                duration: 2,
                ease: "power1.inOut",
                onComplete: async () => {
                    // Gather form data
                    const form = e.target;
                    const formData = new FormData(form);
                    // Convert to JSON if needed:
                    const data = Object.fromEntries(formData.entries());
                    try {
                        const response = await fetch(form.action, {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify(data)
                        });
                        if (response.ok) {
                            const result = await response.json();
                            if (result.role === "doctor") {
                                window.location.href = "/doctor-dashboard";
                            } else if (result.role === 'staff') {
                                window.location.href = "/staff-dashboard";
                            } else {
                                window.location.href = '/dashboard';
                            }
                        }
                        else {
                            const errorText = await response.text();
                            alert("Login failed: " + errorText);
                        }
                    } catch (err) {
                        console.error("Login error:", err);
                    } finally {
                        setTimeout(() => {
                            loadingBar.style.width = "0%";
                        }, 500);
                    }
                }
            });
        });

        // Initialize with the doctor form and set the initial tab indicator
        updateForm("doctor");
        window.addEventListener("load", updateTabIndicator);
        window.addEventListener("resize", updateTabIndicator);
    </script>
</body>

</html>